String 배열 : 배열의 타입이 String인 경우

    String[] name= new String[3];
    3개의 문자열을 담을 수 있는 배열을 생성

    실행결과 : 3개의 String 타입의 참조변수를 저장하기 위한 공간이 마련되고
                  참조형 변수의 기본값은 null이므로 각 요소의 값은 null로 초기화.

    변수의 타입에 따른 기본값
        boolean : false
        char : '\u0000'
        byte,short,long : 0
        long : 0L
        float : 0.0f
        double : 0.0d or 0.0
        참조형 변수 : null


String 배열의 초기화 : 초기화 역시 int배열과 동일한 방법으로 함.
                               배열의 각 요소에 문자열을 지정하면 됨.
                               괄호{}를 사용해서 간단히 초기화도 가능

        String[] =name new String[3];
        name[0] = "Kim";
        name[1] = "Park";
        name[2] = "Lee";

        String[] name=new String[]{"Kim","Park","Lee"};
        String[] name={"Kim","Park","Lee"};
        new String 생략 가능

        특별히 String 객체만 ""로 간략하게 표현하는 것을 허용하지만,
        원래 String은 클래스 이므로 new String()으로 객체를 생성해야함.
        배열에 실제 객체가 아닌 객체의 주소가 포함되어있음.
        기본형 배열이 아닌 경우, 배열에 저장되는 것은 객체의 주소

char 배열과 String 클래스
    사실 문자열이라는 용어는 '문자를 연이어 늘어놓은것'을 의미함.
    문자배열인 char배열과 같은 뜻임
    그럼 왜 String클래스를 이용해서 문자열을 처리?
    String 클래스가 char배열에 여러가지 기능을 이용하여 확장한 것이기 때문
    그래서 char배열을 사용하는 것보다 String 클래스를 사용하는 것이 문자열을 다루기 더 쉬움.

    =>String 클래스는 char 배열에 기능(메소드)을 추가한 것이다.

    객체지향언어이는 Java에서는 char 배열과 그에 관련된 기능들을 함께 묶어서 클래스에 정의함.
    => 서로 관련된 것들끼리 데이터와 기능을 구분하지않고 함께 묶는 것.
    기능은 함수를 의미하며 메소드는 객체지향 언어에서 함수 대신 사용하는 용어임

    char 배열과 String 클래스의 중요한 차이?
    String 객체는 문자를 읽을수만 있을뿐, 변경할 수 없음.

String 클래스의 주요메소드
    - char charAt(int index)  : 문자열의 해당 위치(index)에 있는 문자를 반환한다.
    - int length()  : 문자열의 길이를 반환
    - String subString(int form, int to)    : 문자열에서의 해당 범위(from~to)에 있는 문자열을 반환
                                                                  (to는 범위에 포함되지 않음)
    - char[] toCharArray()  : 문자열을 문자배열(char[])로 변환해서 반환한다.

    - charAt 메소드는 문자열에서 지정된 index에 있는 한 문자를 가져옴.

    - subString 메소드느 문자열의 일부를 뽑아낼 수 있음.

    - 문자열의 값을 비교할때 기본형 변수는 ==를 사용하지만, 문자열의 내용을 비교할때는 equals메소드를 사용해야함.
       equals는 대소문자도 비교하기 때문에, 대소문자를 비교할 필요가 없을때는 equalsIgnoreCase()를 사용

char 배열과 String 클래스의 변환

    char[] chArr={'A' , 'B', 'C'};
    String str=new String(chArr);  chArr를 String으로 변환
    char[] tmp = str.toCharArray();  String tmp를 char배열로 변환



