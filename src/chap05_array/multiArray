다차원 배열
    2차원 배열 선언
    타입[][] 변수이름;        int[][] score;
    타입 변수이름[][];        int score[][];
    타입[] 변수이름[];        int[] score[];

    2차원 배열은 주로 테이블 형태의 데이터를 담는데 사용되며, 4행 3열의 데이터를 담기위한 배열을 생성하려면?
    int[][]  score= new int[4][3];
    수행하면 4행 3열의 데이터 , 12개의 int 값을 저장할 수 있는 공간이 마련됨.

2차원 배열의 인덱스
    2차원 배열은 행과 열로 구성되어 있기 때문에 index도 행과 열에 각각 하나씩 존재함.
    '행 index'의 범위는 0~행의 길이 -1 이고, '열  index'의 범위는 0~열의 길이 -1
    2차원 배열의 각 요소에 접근하는 방법은 배열이름[행index][열 index]

2차원 배열의 초기화
    2차원 배열도 괄호{}를 사용해서 생성과 초기화를 동시에 할 수 있음.
    1차원 배열보다 괄호를 한 번 더 싸서 구분해줌.

배열의 길이
    2차원 배열은 '배열의 배열'로 구성되어있음.
    길이는 어떻게 ??행의 길이가 score 배열의 길이, 열의 길이가 score[0]~[4]의 길이임.

 for문을 통해서 2차원 배열을 초기화

    for(int i=0; i<score.length; i++){
        for(int j=0; j<score[i].length; j++){
            score[i][j]=10;
        }
    }
2차원 배열 score의 모든 요소를 10으로 초기화


가변배열 :
    자바에서는 2차원 이상의 배열을 '배열의 배열'의 형태로 처리한다는 사실을 이용하면 보다 자유로운 형태의 배열울 구성할 수 있음.
    2차원 이상의 다차원 배열을 생성할 때 전체 배열의 차수 중 마지막 차수의 길이를 지정하지않고,
    추후에 각기 다른 길이의 배열을 생성함으로써 고정된 형태가 아닌 보다 유동적인 가변 배열을 구성할 수 있음.

    int[][] score = new int[5][3];  5행 3열의 2차원 배열 생성

    다음과 같이 표현 가능
    int[][] score=new int[5][];
    score[0]=new int[3];
    score[1]=new int[3];
    score[2]=new int[3];
    score[3]=new int[3];
    score[4]=new int[3];

    int[][] score = new int[5][];   두 번째 차원의 길이는 지정하지 않음.
    score[0]=new int[3];
    score[1]=new int[3];
    score[2]=new int[3];
    score[3]=new int[3];
    score[4]=new int[3];





