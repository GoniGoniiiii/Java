변수 :
   클래스변수, 인스턴스변수, 지역변수
   변수의 종류를 결정짓는 중요한 요소 : 변수의 선언된 위치!
   멤버변수를 제외한 나머지 변수들은 모두 지역변수
   멤버변수 중 static이 붙은 것은 클래스변수
                   static이 붙지 않은 것은 인스턴스변수

   클래스 영역에 선언되어있는것은 멤버변수
   - 클래스변수 : 클래스영역에 선언됨, 클래스가 메모리에 올라갈때 생성됨
   - 인스턴스 변수 : 클래스 영역에 선언됨, 인스턴스가 생성되었을때 생성됨
   - 지역변수 : 클래스 영역 이외의 영역(메소드, 생성자, 초기화 블럭 내부)에 선언됨
                    변수 선언문이 수행되었을때

인스턴스 변수 :
    - 클래스 영역에 선언
    - 클래스의 인스턴스를 생성할때 만들어짐.
    - 그렇기때문에 변수의 값을 읽어오거나 저장하기 위해서는 먼저 인스턴스를 생성해야함.
    - 인스턴스는 독립적인 저장공간을 가지므로 서로 다른 값을 가질수있음.
    - 인스턴스마다 고유한 상태를 유지해야하는경우, 인스턴스 변수로 선언

클래스변수 :
   - 클래스변수를 선언하기 위해서는 인스턴스변수앞에 static을 붙이면됨.
   - 클래스변수는 모든 인스턴스가 공통된 저장공간(변수)를 공유하게됨.
   - 한 클래스의 모든 인스턴스들이 공통적인 값을 유지해야하는 속성의 경우, 클래스 변수를 선언해야함.
   - 인스턴스를 생성하지않고 바로 사용할 수 있음.
   - 클래스이름.클래스변수 형식으로 사용

지역변수 :
    - 메소드 내에 선언되어 메소드 내에서만 사용 가능, 메소드가 종료되면 소멸되어 사용 불가능
    - for문 또는 while문의 블럭 내의 선언된 지역변수는, 지역변수가 선언된 블럭{} 내에서만 사용 가능.
    - 블럭을 벗어나면 소멸되어 사용할 수 없음.


=> 인스턴스 변수는 인스턴스가 생성될 때마다 생성되므로 인스턴스마다 각기 다른 값을 유지할 수 있지만,
     클래스 변수는 모든 인스턴스가 하나의 저장공간을 공유하므로, 항상 공통된 값을 가짐.


기본형 매개변수와 참조형 매개변수
    - 기본형 매개변수 : 변수의 값을 읽기만 할 수 있음(read only)
    - 참조형 매개변수 : 변수의 값을 읽고 변경할 수 있음(read & write)

참조형 반환타입 : 반환타입이 참조형
        => 반환타입이 참조형이라는 것은 메소드가 객체의 주소를 반환한다는것.




