변수 : 값을 저장할 수 있는 메모리상의 공간을 의미
    - 하나의 변수에 하나의 값만 저장할 수 있음, 새로운 값을 저장하면 기존의 값은 사라짐
    => 단 하나의 값을 저장할 수 있는 메모리 공간

선언과 초기화
    변수타입 변수명;
    ex) int   age;

변수타입 : 저장될 값이 어떤 타입인지를 지정
변수이름 : 변수에 붙인 이름
   -같은 이름 여러개 존재 X, 서로 구별될 수 있어야함

변수의 초기화 : 변수를 사용하기 전에 처음으로 값을 저장하는 것
    - 메모리는 여러 프로그램이 공유하는 자원이므로 다른 프로그램에 의해 저장된 알수없는값(쓰레기값)이 남아있을수 있음
    - 변수의 종류에 따라 변수의 초기화를 생략할 수 있는 경우도 있지만, 사용되기 전 초기화 하는것이 좋음
    - 값을 저장할때는 '대입 연산자' 사용
    ex) int age = 25;   => 변수 age를 선언하고 25로 초기화 한다.

- 변수는 한 줄에 하나씩 선언하는게 보통이지만, 타입이 같은 경우 ','를 구분으로 여러 변수를 한줄에 선언하는 것도 가능
int a;
int b;
int x=0;
int y=0;k

int a,b=0;
int x=0, y=0;
=> 서로 다른 코드이지만 의미는 같음


변수의 명명 규칙
    1. 대소문자가 구분되어야하며 길이에 제한이 없음
     - True와 true는 다름

    2. 예약어를 사용해서는 안됨
    - true는 예약어라서 사용할 수 없지만, True는 가능

    3.숫자로 시작해서는 안됨
    - top10 은 가능, 7up은 안됨

    4.특수문자는 '_' 와 '$' 만을 허용
    - $harp는 가능 , $#arp는 안됨

 예약어 ? 키워드 or 'reserved word' , 프로그래밍언어의 구문에 사용되는 단어
 (너무 많으니까 나중에 찾아보기로.)

 필수적인 것은 아니지만 권장하는 규칙들!!!!! (반드시는 아니지만 코드를 보다 편하게 이해하기위한 개발자들간의  암묵적 약속)
 1. 클래스이름은 항상 대문자로  , 변수와 메소드의 이름은 첫 글자는 항상 소문자로

 2. 여러 단어로 이루어진 이름은 단어의 첫 글자를 대문자로 한다.
 ex) lastIndexOf , StringBuffer

 3. 상수의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우 '_' 로 구분
 ex) PI , MAX_NUMBER

 변수의 타입
    기본형과 참조형
        - 기본형 : 실제 값을 저장함(data)
        =>  논리형(boolean), 문자형(char) , 정수형(byte,short,int,long), 실수형(float,double) 계산을 위한 실제 값을 저장
        - 참조형 : 어떤 값이 저장되어 있는 주소를 값으로 가짐(memory address)
        =>  객체의 주소를 저장. 8개의 기본형을 제외한 나머지 타입

  자바는 c언어와 달리 참조형 변수간의 연산을 할 수 없으므로 실제 연산에 사용되는 것은 모두 기본형 변수

  참조형 변수를 선언할때는 변수의 타입으로 클래스의 이름을 사용 -> 클래스의 이름이 참조변수의 타입이 됨.

  참조변수의 선언
    ex)
    클래스이름 변수이름;
    (변수의 타입이 기본형이 아닌것들은 모두 참조변수)

ex) Date 클래스 타입의 참조변수 today 선언하기
    Date today= new Date();


기본형
    - 논리형
        boolean : true와 false중 하나를 값으로 가짐.
                      조건식과 논리적 계산에 사용
                      기본값은 false
                      1 byte


    - 문자형
        char : 문자를 저장하는데 사용, 변수에 하나의 문자만 저장 가능
                  변수에 '문자'가 저장되는것 같지만 문자의 유니코드가 저장됨(컴퓨터는 숫자밖에 모르기때문에 모든 데이터를 숫자로 변환)
                  16자리의 2진수로 표현할 수 있는 정수의 개수인 총 65536개의 코드를 사용 가능
                  2 byte

       if) 문자의 유니코드 값을 알고 싶으면? char값을 int값으로 바꿔보면 알 수 있음

    - 정수형 : 정수를 저장하는데 사용, 주로 int 사용
        byte는 이진데이터를 다룰때 사용 , short는 c언어와의 호환을 위해서  사용
        byte  - 1 byte
        short - 2 byte
        int - 4 byte
        long - 8 byte

         =>정수형은 주로 int 사용
             정수는 가장많이 사용되므로 값의 범위에 맞는 타입을 선택하면 되지만, int는 CPU가 가장 효율적으로 처리할 수 있는 타입.
             효율적인 실행보다 메모리를 절약하려면 byte나 short~


    - 실수형
         float, double : 실수를 저장하는데 사용, 주로 double 사용
         float - 4 byte
         double - 8 byte

    변수의 저장 범위
    - boolean : true ~ false
    - char : 0 ~ 65,535 (유니코드)
    - byte : -128 ~ 127
    - short : -32,768 ~ 32,767
    - int : -2,147,483,648 ~ 2,147,483,647
    - long : -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807
    - float :  1.4E-45 ~ 3.4028235E38
    - double : 4.9E-324 ~ ±1.7976931348623157E308

    값을 정확히 외울 필요는 없고 정수형은  −2(n−1) ~ 2(n-1) - 1  / n은 비트 수임
    ( 괄호가 곱하기가 아니고 n승임)

상수 : 값을 저장할 수 있는 공간이지만, 한 번 저장하면 다른 값으로 변경 할 수 없음.
        선언하는 법은 변수와 동일하며 final 키워드만 붙여주면 됨.
        반드시 선언과 동시에 초기화 해주어야함.
        상수의 이름은 모두 대문자로 하는것이 국룰.

        final int kong=3;

리터럴 : 변수에 들어가는 값
        int year(변수) = 2014(리터럴);
        final int KONG(상수) = 3(리터럴);


 리터럴 타입과 접미사
    - 논리형 : true, false  / 접미사 X
    - 정수형 : long일 때 접미사 L,l 붙이기
    - 실수형 : float일 때 f, double일때 d

    10진수 외에도 2, 8, 16 진수로 표현된 리터럴을 변수에 저장 가능
    - 16진수 : 0x , 0X
    - 8진수 : 0
    - 2진수 : 0b

    ex) int octNum = 010; 8진수 10
          int hexNum = 0x10;
          int binNum = 0b10;

    실수형 리터럴인데 접미사가 없다? double 타입 리터럴

    타입의 불일치
     : 리터럴의 타입은 저장될 변수의 타입과 일치하는 것이 보통이지만, 타입이 달라도 저장범위가 넓은 타임에 좁은 타입의 값을 저장하는 것은 허용
     int i= 'A';   / A의 유니코드인 65가 저장
     long l =123; /int 보다 long 의 범위가 더 넓기때문에 저장 가능
     double = 3.14f / float보다 double의 범위가 더 넓기때문에 저장 가능


     문자리터럴 / 문자열 리터럴
     - 문자 리터럴 : 'A'와 같이 작은따옴표로 문자 하나를 감싼것
     - 문자열 리터럴 : "ABC" 같이 큰 따옴표로 한 문자 이상을 감싼것

      문자열 리터럴은 안에 아무것도 넣지 않는것을 허용, 문자 리터럴은 허용 안됨
      ex) String str= ""
            char ch = ''  / 오류남 '' 안에 반드시 한 문자 있어야함
            char ch = ' '  / 공백문자(blank)로 변수 ch를 초기화

       원래 String은 클래스이므로 객체를 생성하는 연산자 new를 생성해야지만 위와 같은 표현도 허용.
            String str= new String("Java");

        덧셈 연산자를 이용하여 문자열을 겹할 할 수 있음.
            String name= "Ja" + "va" => Java
            String str=name + 8.0 => Java 8.0

        문자열 + any type = "문자열"
        any type + 문자열 = "문자열"

        기본형 타입을 문자열로 변환할때 아무 내용도 없는 빈 문자열 ""을 더해주면 됨.

 특수문자
    - tab : \t
    - backspace : \b
    - form fead : \f
    - new line : \n
    - carriage return : \r
    - 역슬래쉬 : \\
    - 작은 따옴표 : \'
    - 큰 따옴표 : \"
    - 유니코드(16진수 문자) : \u유니코드

  형변환 : 변수 or 상수의 타입을 다른 타입으로 변환하는 것(캐스팅이라고도 함)
  ex) int와 float 연산시 int 값을 float 값으로 바꾸어 연산해야함

     방법 :  (타입)피연산자
                캐스트 연산자,형변환 연산자

    기본형에서 boolean 값을 제외한 나머지 타입들은 서로 형변환이 가능
    기본형과 참조형은 서로 형변환이 안됨